# Configuration file for sbupdate
# Commented-out variables show default values.

################
### SETTINGS  ##
################
KEY_DIR="/etc/efi-keys"
     # KEY_DIR          Directory with the custom Secure Boot keys
ESP_DIR="/boot"
     # ESP_DIR          EFI System Partition location
OUT_DIR="EFI/Linux"
     # OUT_DIR          Relative path on ESP for signed kernel images
#SPLASH="/usr/share/systemd/bootctl/splash-arch.bmp"
     # SPLASH           Splash image file. Use "/dev/null" to disable splash.
#EXTRA_SIGN=()
     # EXTRA_SIGN       An array of additional files to sign
LUKS_PART="/dev/nvme0n1p2"
     # PARTITION (DEVICE PATH) LUKS PARTITION CONTAINING THE ROOT FILESYSTEM 
LUKS_UUID=`lsblk -o NAME,UUID -rp | grep "${LUKS_PART}" | grep -E --only-matching "[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}"`
     # UUID OF THE LUKS PARTITION CONTAINING THE ROOT PARTITION (Calculated from LUKS_PART)
CMDLINE_DEFAULT="rd.luks.name=${LUKS_UUID}=cryptlvm rd.luks.options=tpm2-device=auto root=/dev/ArchVG/root"
     # CMDLINE_DEFAULT     THE BASE KERNEL COMMAND LINE USED BY ALL KERNELSs.
CMDLINE_GUI="${CMDLINE_DEFAULT} quiet loglevel=3 video=efifb:nobgrt systemd.show_status=auto rd.udev.log_level=3"
     # CMDLINE_GUI:        THE BASE KERNEL COMMAND LINE WITH ADDITONAL PARAMETERS APPENDED FOR GUI BOOT
CMDLINE_MULTIUSER="${CMDLINE_DEFAULT} systemd.unit=multi-user.target"
     # CMDLINE_MULTIUSER:  THE BASE KERNEL COMMAND LINE WITH ADDITONAL PARAMETERS APPENDED FOR MULTIUSER BOOT
EFI_COUNT=`find "${ESP_DIR}/${OUT_DIR}" -maxdepth 1 -iname '*.efi' | wc -l`
     # NUMBER OF EXISTING EFI FILES

####################
## CONFIGURATIONS ##
####################
# CREATE TWO ENTRIES FOR EACH KERNEL
CONFIGS["linux"]="linux linux-cli"
CONFIGS["linux-lts"]="linux-lts linux-lts-cli"
CONFIGS["linux-clear"]="linux-clear linux-clear-cli"
     
# OVERRIDE ENTRY SETTING
# GNOME BOOT
# linux
CMDLINE["linux"]="${CMDLINE_GUI}"
INITRD["linux"]="/boot/initramfs-linux.img"
#linux-lts
CMDLINE["linux-lts"]="${CMDLINE_GUI}"
INITRD["linux-lts"]="/boot/initramfs-linux-lts.img"
#linux-clear
CMDLINE["linux-clear"]="${CMDLINE_GUI}"
INITRD["linux-clear"]="/boot/initramfs-linux-clear.img"

# MULTIUSER BOOT
# linux-cli
CMDLINE["linux-cli"]="${CMDLINE_MULTIUSER}"
INITRD["linux-cli"]="/boot/initramfs-linux.img"
#linux-lts-cli
CMDLINE["linux-lts-cli"]="${CMDLINE_MULTIUSER}"
INITRD["linux-lts-cli"]="/boot/initramfs-linux-lts.img"
#linux-clear-cli
CMDLINE["linux-clear-cli"]="${CMDLINE_MULTIUSER}"
INITRD["linux-clear-cli"]="/boot/initramfs-linux-clear.img"


######################
## BEGIN PROCESSING ##
######################
echo "SETTINGS:"
echo "         LUKS PARTITION UUID: ${LUKS_UUID}"
echo "     KERNEL PARAMETERS (GUI): ${CMDLINE_GUI}"
echo "     KERNEL PARAMETERS (CLI): ${CMDLINE_MULTIUSER}"
echo -e "\n"


if [ `echo "$LUKS_UUID" | grep -cE "^[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}$"` -ne 1 ]; then
     echo "WARNING:  UUID of LUKS partition not found or invalid, Exiting!"
     exit -1
fi




echo "BACKUP EXISTING EFI ENTRIES:"
if [ $EFI_COUNT -ne 0 ]; then
    mkdir -p /boot/EFI/Linux/bak
    cp -v /boot/EFI/Linux/*.efi /boot/EFI/Linux/bak
else
    echo "No Existing EFI files in ${ESP_DIR}/${OUT_DIR}"
fi
echo -e "\n"

echo "SIGN BOOT IMAGES:"


##########################
## REFERENCE MATERIALS  ##
##########################
# Per-kernel configuration
#
# For each kernel <NAME> the following optional settings may be added:
#
#   CMDLINE[<NAME>]="..."  # Alternative kernel command line
#                          # Default value: ${CMDLINE_DEFAULT}
#   INITRD[<NAME>]="..."   # Alternative initramfs file
#                          # Default value: /boot/initramfs-<NAME>.img
#   OUTPUT[<NAME>]="..."   # Alternative output file name
#                          # Default value: ${OUT_DIR}/<NAME>-signed.efi
#
# Each kernel can be mapped to multiple configs using the CONFIGS
# variable, in which case CMDLINE, INITRD and OUTPUT are set per config.
#
# Examples:
#   CMDLINE["linux-lts"]="custom command line"
#   INITRD["linux-lts"]="/boot/initramfs-linux-custom.img"
#
#   # Generates variants with default and fallback initramfs
#   CONFIGS["linux"]="linux linux-fallback"
#
# Note: Intel and AMD microcode updates are handled automatically and
# do not need to be specified in INITRD.
